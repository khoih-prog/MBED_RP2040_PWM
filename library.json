{
  "name": "MBED_RP2040_PWM",
  "version": "1.0.1",
  "keywords": "timing, device, control, timer, pwm, interrupt, hardware-pwm, hardware-timer, mission-critical, accuracy, non-blocking, mbed, mbed-rp2040, mbed-nano, rp2040, nano-rp2040-connect, raspberry-pi-pico, precise, hardware",
  "description": "This library enables you to use Hardware Timers on RP2040-based RP2040 board to create and output PWM to pins. These PWM channels, using RP2040 Hardware-PWM channels, still work even if other functions are blocking. Moreover, they are much more precise (certainly depending on clock frequency accuracy) than other software ISR-based PWM, using millis(), micros() or Timer Interrupt. This important feature is absolutely necessary for mission-critical tasks. You can start, stop, change and restore the settings of any PWM channel on-the-fly",
  "authors":
  {
    "name":  "Khoi Hoang",
    "url":   "https://github.com/khoih-prog",
    "maintainer": true
  },
  "repository":
  {
    "type": "git",
    "url": "https://github.com/khoih-prog/MBED_RP2040_PWM"
  },
  "homepage": "https://github.com/khoih-prog/MBED_RP2040_PWM",
  "export": {
    "exclude": [
      "linux",
      "extras",
      "tests"
    ]
  },
  "license": "MIT",
  "frameworks": "*",
  "platforms": ["mbed", "mbed_nano", "mbed_rp2040"],
  "examples": "examples/*/*/*.ino",
  "headers": ["MBED_RP2040_PWM.h", "MBED_RP2040_PWM.hpp"]
}
